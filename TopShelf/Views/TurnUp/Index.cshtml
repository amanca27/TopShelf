@model PlaylistListModel
@{
    ViewData["Title"] = "Turn Ups";
}

<h1>Turn-Up</h1>


@Html.DropDownListFor(m => m.Playlists[0].Name, new SelectList(@Model.Playlists, "Name", "Name"), "Select a Playlist", new { @class = "form-control round" })

<script src="https://sdk.scdn.co/spotify-player.js"></script>
<script type="text/javascript">
    window.onSpotifyWebPlaybackSDKReady = () => {
        var token = '[My Spotify Web API access token]';
        var player = new Spotify.Player({
            name: 'Web Playback SDK Quick Start Player',
            getOAuthToken: cb => { cb(token); }
        });

        // Error handling
        player.addListener('initialization_error', ({ message }) => { console.error(message); });
        player.addListener('authentication_error', ({ message }) => { console.error(message); });
        player.addListener('account_error', ({ message }) => { console.error(message); });
        player.addListener('playback_error', ({ message }) => { console.error(message); });

        // Playback status updates
        player.addListener('player_state_changed', state => { console.log(state); });

        // Ready
        player.addListener('ready', ({ device_id }) => {
            console.log('Ready with Device ID', device_id);
        });

        // Not Ready
        player.addListener('not_ready', ({ device_id }) => {
            console.log('Device ID has gone offline', device_id);
        });

        // Connect to the player!
        player.connect();
    };




</script>